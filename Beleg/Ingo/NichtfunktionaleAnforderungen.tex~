\section{Nichtfunktionale Anforderungen}\label{NichtfunktionaleAnforderungen}
Die Anwendung wird test-driven entwickelt. Für jede nach außen sichtbare Funktionalität einer Klasse werden Unit-Tests geschrieben. Es werden Funktionstests geschrieben, die den Parser funktionsübergreifend testen. Daneben dokumentieren funktionsübergreifende Tests, wie der Parser verwendet werden sollte - d.h. welche Methoden aufgerufen werden können und was diese Methoden zurückgeben. Die Anwendung soll außerdem wartungsfreundlich und damit leicht änderbar und anpassbar sein, wenn z.B. neue Knotennamen hinzugefügt werden. Es wird auf sprechende Variablennamen und Methodennamen geachtet. Es wird darauf geachtet, dass jede Methode nur eine Funktionalität implementiert und somit kurz und übersichtlich bleibt. Es wird Dependency Injection eingesetzt, um die Objektinstanziierung von der Programmlogik zu trennen. Es wird Maven eingesetzt, um die Anwendung automatisiert erstellen und testen zu können.